/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.User;
import ticket.booking.services.TrainService;
import ticket.booking.services.UserService;

import java.io.IOException;
import java.sql.SQLOutput;
import java.util.Scanner;

public class App {
    public static void main(String[] args) throws IOException {

        System.out.println("Running Train Booking System");
        Scanner scanner = new Scanner(System.in);
        UserService userService = new UserService();
        TrainService trainService = new TrainService();
        User user = null;

        try {
            userService = new UserService();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        int option = 0;

        while (option != 7) {
            System.out.println("\n ---------------- Select the option ----------------");
            System.out.println("1. Login");
            System.out.println("2. Signup");
            System.out.println("3. List of Booked Tickets");
            System.out.println("4. Book Ticket");
            System.out.println("5. Cancel Ticket");
            System.out.println("6. Create Train Route");
            System.out.println("7. List of Users (Admin)");
            System.out.println("8. Exit");
            option = scanner.nextInt();
            scanner.nextLine();

            switch (option) {
                case 1:
                    System.out.println("Login Here");
                    userService.login();
                    user = userService.getLoggedInUser();
                    break;
                case 2:
                    System.out.println("Signup Here");
                    userService.signUp();
                    user = userService.getLoggedInUser();
                    break;
                case 3:
                    if (user == null) {
                        System.out.println("You must login or signup first to view booked tickets.");
                    } else{
                        System.out.println("Booked Tickets:");
                        userService.listOfBookedTickets(user);
                    }
                    break;
                case 4:
                    if (user == null) {
                        System.out.println("Please login or signup before booking tickets.");
                    } else {
                        userService.bookTicket(user);
                    }
                    break;
                case 5:
                    if (user == null) {
                        System.out.println("Please login or signup before booking tickets.");
                    } else {
                        userService.cancelTicket(user);
                    }
                    break;
                case 6:
                    if (!trainService.isAdminAuthenticated()) {
                        System.out.println("Access denied. Only admin can create train routes.");
                    }else {
                        System.out.println("Create Train Route (Admin)");
                        trainService.createTrainRoute();
                    }
                    break;
                case 7:
                    if (!trainService.isAdminAuthenticated()) {
                        System.out.println("Access denied. Only admin can view all users.");
                    } else {
                        System.out.println("List of Users (Admin Control)");
                        userService.printAllUsers();
                    }
                    break;
                case 8:
                    System.out.println("Exiting...\n Thanks for visiting IRCTC Booking System!");
                    break;
                default :
                    System.out.println("Oops something went wrong");
                    break;
            }
        }
    }
}
